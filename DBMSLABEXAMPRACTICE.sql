CREATE TABLE CUSTOMERS
(CID VARCHAR(30) PRIMARY KEY,CNAME VARCHAR(50),DOB DATE,MARITAL_STATUS VARCHAR(1));

CREATE TABLE ORDERS
(OID VARCHAR(30) PRIMARY KEY,ORDER_DATE DATE,CID VARCHAR(50),
FOREIGN KEY(CID) REFERENCES CUSTOMERS(CID));

CREATE TABLE PRODUCT
(PID VARCHAR(30) PRIMARY KEY,PRODUCT_NAME VARCHAR(30) NOT NULL,QUANTIY_ON_HAND INT);

CREATE TABLE ORDERITEM
(OID VARCHAR(30),PID VARCHAR(30),UNITPRICE DECIMAL(6,2),QUANTITY INT,
FOREIGN KEY (OID) REFERENCES ORDERS(OID),
FOREIGN KEY (PID) REFERENCES PRODUCT(PID));

DROP TRIGGER IF EXISTS prefixC;
DELIMITER $$
CREATE TRIGGER prefixC BEFORE INSERT ON CUSTOMERS 
FOR EACH ROW 
BEGIN
	DECLARE TEMPCID VARCHAR(30) DEFAULT "";
    IF NEW.CID NOT LIKE "C%" THEN
    BEGIN
		SET TEMPCID=CONCAT("C",NEW.CID);
        SET NEW.CID=TEMPCID;
    END;
    END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS prefixO;
DELIMITER $$
CREATE TRIGGER prefixO BEFORE INSERT ON ORDERS
FOR EACH ROW 
BEGIN
	DECLARE TEMPOID VARCHAR(30) DEFAULT "";
    IF NEW.OID NOT LIKE "O%" THEN
    BEGIN
		SET TEMPOID=CONCAT("O",NEW.OID);
        SET NEW.OID=TEMPOID;
    END;
    END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS prefixP;
DELIMITER $$
CREATE TRIGGER prefixP BEFORE INSERT ON PRODUCT 
FOR EACH ROW 
BEGIN
	DECLARE TEMPPID VARCHAR(30) DEFAULT "";
    IF NEW.PID NOT LIKE "P%" THEN
    BEGIN
		SET TEMPPID=CONCAT("P",NEW.PID);
        SET NEW.PID=TEMPPID;
    END;
    END IF;
END$$
DELIMITER ;

INSERT INTO CUSTOMERS(CID,CNAME,DOB,MARITAL_STATUS) 
VALUES
("1","JOHN DOE","2001-03-16","N");
SELECT * FROM CUSTOMERS;

INSERT INTO ORDERS(OID,ORDER_DATE,CID) 
VALUES 
("1","2021-08-21","C1"),
("O2","2021-10-21","C1"),
("O3","2021-04-24","C1"),
("4","2021-03-16","C1"),
("5","2021-05-01","C1");
SELECT * FROM ORDERS;

INSERT INTO PRODUCT(PID,PRODUCT_NAME,QUANTIY_ON_HAND)
VALUES
("1","XYZ",20),
("P2","ABC",30),
("3","WRF",10),
("4","AAA",120),
("P5","RFC",15);
SELECT * FROM PRODUCT;

INSERT INTO ORDERITEM(OID,PID,UNITPRICE,QUANTITY) 
VALUES
("O1","P1",100,10),
("O2","P2",200.15,15),
("O3","P3",300,9),
("O4","P4",115.15,15),
("O5","P5",120,15);
SELECT * FROM ORDERITEM;

-- QUESTION 1
INSERT INTO CUSTOMERS(CID,CNAME,DOB,MARITAL_STATUS) 
VALUES
("2","JANE DOE","2001-04-24","Y");
INSERT INTO ORDERS(OID,ORDER_DATE,CID) 
VALUES 
("6","2021-08-21","C2");
INSERT INTO ORDERITEM(OID,PID,UNITPRICE,QUANTITY) 
VALUES
("O6","P3",100,10);

SELECT C.CNAME,C.DOB,C.MARITAL_STATUS FROM CUSTOMERS AS C 
INNER JOIN ORDERS AS O ON C.CID=O.CID
INNER JOIN ORDERITEM AS OI ON OI.OID=O.OID 
INNER JOIN PRODUCT AS P ON P.PID=OI.PID
WHERE P.PRODUCT_NAME="WRF"
ORDER BY(C.CNAME) ASC;

-- QUESTION 2
SELECT DISTINCT C.CNAME FROM CUSTOMERS AS C 
INNER JOIN ORDERS AS O ON C.CID=O.CID
INNER JOIN ORDERITEM AS OI ON OI.OID=O.OID 
INNER JOIN PRODUCT AS P ON P.PID=OI.PID
WHERE P.PRODUCT_NAME<>"XYZ" AND P.PRODUCT_NAME<>"ABC";

-- QUESTION 3
SELECT P.PRODUCT_NAME AS "PRODUCT",SUM(OI.QUANTITY) AS "ORDERD QUANTIY" FROM PRODUCT AS P 
INNER JOIN ORDERITEM AS OI ON OI.PID=P.PID
GROUP BY (P.PID);

-- QUESTION 4
SELECT C.CNAME,COUNT(O.OID) FROM CUSTOMERS AS C 
INNER JOIN ORDERS AS O ON C.CID=O.CID
GROUP BY(C.CID) HAVING COUNT(O.OID)>4;

-- QUESTION 5
SELECT P.PRODUCT_NAME,COUNT(C.CID) FROM CUSTOMERS AS C 
INNER JOIN ORDERS AS O ON C.CID=O.CID
INNER JOIN ORDERITEM AS OI ON OI.OID=O.OID 
INNER JOIN PRODUCT AS P ON P.PID=OI.PID
GROUP BY(P.PID);

-- QUESTION 6
DROP FUNCTION IF EXISTS findProductOrders;
DELIMITER $$
CREATE FUNCTION findProductOrders(pidIN VARCHAR(30))
RETURNS INT DETERMINISTIC
BEGIN
	DECLARE RES INT DEFAULT 0;
	SELECT COUNT(OID) FROM ORDERITEM WHERE PID=pidIN INTO res;
    RETURN RES;
END$$
DELIMITER ;
SELECT findProductOrders("P3");

-- QUESTION 7
DROP TRIGGER IF EXISTS orderItemCheck;
DELIMITER $$
CREATE TRIGGER orderItemCheck BEFORE INSERT ON ORDERITEM
FOR EACH ROW
BEGIN
	DECLARE QUANTITYAVIALABLE INT DEFAULT 0;
    SELECT QUANTIY_ON_HAND FROM PRODUCT WHERE PID=NEW.PID INTO QUANTITYAVIALABLE;
    IF QUANTITYAVIALABLE<NEW.QUANTITY THEN
    BEGIN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT="NOT ENOUGH STOCK";
    END;
    END IF;
END$$
DELIMITER ;
INSERT INTO ORDERITEM(OID,PID,UNITPRICE,QUANTITY) 
VALUES
("O7","P1",100,1000);

-- QUESTION 8
DROP TRIGGER IF EXISTS preventDeleteProduct;
DELIMITER $$
CREATE TRIGGER preventDeleteProduct BEFORE DELETE ON PRODUCT
FOR EACH ROW
BEGIN
	SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT="DELETION NOT POSSIBLE FROM PRODUCT TABLE";
END$$
DELIMITER ;
DELETE FROM PRODUCT WHERE PID="P1";